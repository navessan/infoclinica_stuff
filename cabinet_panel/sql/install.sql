
/******************************************************************************/

CREATE GENERATOR GEN_Z_KIOSK_ADR_ID;

CREATE TABLE Z_KIOSK_ADR (
    ID      INTEGER,
    IPADDR  VARCHAR(16),
    PLACE   VARCHAR(32)
);

/* Trigger: Z_KIOSK_ADR_BI0 */
CREATE OR ALTER TRIGGER Z_KIOSK_ADR_BI0 FOR Z_KIOSK_ADR
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  if (NEW.ID is NULL) then NEW.ID = GEN_ID(GEN_Z_KIOSK_ADR_ID, 1);
end

/* Privileges of users */
GRANT ALL ON Z_KIOSK_ADR TO CHEA WITH GRANT OPTION;

/******************************************************************************/

CREATE GENERATOR GEN_Z_KIOSK_DOCTORS_ID;

CREATE TABLE Z_KIOSK_DOCTORS (
    ID           INTEGER,
    DCODE        INTEGER,
    URL          VARCHAR(256),
    INFO         BLOB SUB_TYPE 1 SEGMENT SIZE 16384,
    FIO          VARCHAR(255),
    DOLGNOST     VARCHAR(256),
    OBRAZOVANIE  VARCHAR(256),
    OSN_SPEC     VARCHAR(256),
    DIPLOM       VARCHAR(256),
    STAG         VARCHAR(256),
    DOSTIGENIA   BLOB SUB_TYPE 1 SEGMENT SIZE 16384,
    IMAGE        VARCHAR(256)
);

CREATE INDEX Z_KIOSK_DOCTORS_IDX1 ON Z_KIOSK_DOCTORS (DCODE);

/* Trigger: Z_KIOSK_DOCTORS_BI0 */
CREATE OR ALTER TRIGGER Z_KIOSK_DOCTORS_BI0 FOR Z_KIOSK_DOCTORS
ACTIVE BEFORE INSERT POSITION 0
AS
begin
    if (NEW.ID is NULL) then NEW.ID = GEN_ID(GEN_Z_KIOSK_DOCTORS_ID, 1);
end

/* Trigger: Z_KIOSK_DOCTORS_BU0 */
CREATE OR ALTER TRIGGER Z_KIOSK_DOCTORS_BU0 FOR Z_KIOSK_DOCTORS
ACTIVE BEFORE UPDATE POSITION 0
AS
begin
    if (NEW.ID is NULL) then NEW.ID = GEN_ID(GEN_Z_KIOSK_DOCTORS_ID, 1);
end

/* Privileges of users */
GRANT ALL ON Z_KIOSK_DOCTORS TO CHEA WITH GRANT OPTION;
